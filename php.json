{
	// Place your snippets for php here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"function header": {
		"prefix": "desc",
		"body": [
			"/**",
			"* Description:$1",
			"*",
			"* @author huyue",
			"*",
			"* @param Type  $var  $2",
			"*",
			"* @return Type $3",
			"*/"
		],
		"description": "function header infomtion"
	},
	"property for class": {
		"prefix": "prop",
		"body": [
			"public static $var;"
		],
		"description": "property for class"
	},
	"print_r() and die": {
		"prefix": "pd",
		"body": [
			"echo '<pre>';",
			"echo __FILE__.':'.__LINE__ . PHP_EOL;",
			"print_r($1);",
			"die;"
		],
		"description": "var_dump() and die"
	},
	"var_dump() and die": {
		"prefix": "vd",
		"body": [
			"echo '<pre>';",
			"echo __FILE__.':'.__LINE__ . PHP_EOL;",
			"var_dump($1);",
			"die;"
		],
		"description": "var_dump() and die"
	},
	"echo and die": {
		"prefix": "ed",
		"body": [
			"echo __FILE__.':'.__LINE__ . PHP_EOL;",
			"echo '$1' . PHP_EOL;",
			"die;"
		],
		"description": "var_dump() and die"
	},
	"try catch": {
		"prefix": "try",
		"body": [
			"try{",
			"}catch('$1'){",
			"}"
		],
		"description": "try and catche"
	},
	"print_r write to text file": {
		"prefix": "ptt",
		"body": [
			"ob_start();",
			"echo __FILE__.':'.__LINE__ . PHP_EOL;",
			"print_r($1);",
			"$$result = ob_get_clean();",
			"if (!$$fhandle = fopen(CMP_CACHE_PATH . '/print_r_output' . time() . '.txt', 'a+')) {",
			"    print 'error';",
			"    exit;",
			"}",
			"fwrite($$fhandle, $$result);",
			"fclose($$fhandle);",
			"echo 'Successful!The out put has been written to the text!';",
			"die;"
		],
		"description": "var_dump write to text file"
	},
	"get time and memory usage": {
		"prefix": "tnm",
		"body": [
			"ob_start();",
			"$$t1 = microtime(true);",
			"echo 'Begin memory_get_usage: ' . memory_get_usage() . PHP_EOL;",
			"$1",
			"$$t2 = microtime(true);",
			"echo '耗时' . ($$t2 - $$t1) . '秒' . PHP_EOL;",
			"echo 'End memory_get_usage: ' . memory_get_usage() . PHP_EOL;",
			"$$result = ob_get_clean();",
			"if (!$$fhandle = fopen(CMP_CACHE_PATH . '/var_dump_output' . time() . '.txt', 'a+')) {",
			"    print 'error';",
			"    exit;",
			"}",
			"fwrite($$fhandle, $$result);",
			"fclose($$fhandle);",
			"echo 'Successful!The out put has been written to the text!';",
			"die;",
		],
		"description": "get time and memory usage"
	}
}
